import type { Metadata } from "next";
import 'bootstrap/dist/css/bootstrap.css';
import dynamic from "next/dynamic";
// import { Zen_Maru_Gothic } from 'next/font/google';
import '@/App.css'
import { AppRouterCacheProvider } from '@mui/material-nextjs/v14-appRouter'; 
// import NavBar from "./_components/navBar";

// const DynamicBootstrap = dynamic(
// 	() => require('bootstrap/dist/js/bootstrap.min.js'),
// 	{ ssr: false }
// );

// const zen_maru_gothic = Zen_Maru_Gothic({
// 	weight: '400',
// 	subsets: ['latin']
// });

export const metadata: Metadata = {
	title: "Pokedex",
	description: "Pokedex App Generated by create next app",
};



type RootLayoutProps = {
	children: React.ReactNode
}

export default async function RootLayout(props: RootLayoutProps) {

	// prefetch data at build time
	// const responses = await Promise.all([...Array(1000).keys()].map(num => fetch(`https://pokeapi.co/api/v2/pokemon/${num + 1}`, {cache: 'force-cache'})));


	return (
		<html lang="en">
			{/* <body className={zen_maru_gothic.className}> */} 
			<body>
				{/* {props.search} */}
				
				<AppRouterCacheProvider>
					{props.children}
				</AppRouterCacheProvider>
			</body>
		</html>
	);
};


// using provider will probably not affect the rendering of the components, only the children will still be rendered on the server, but the component that read the context (usexxx hook) will be rendered on the client.

// configure documnet file?
// https://nextjs.org/docs/getting-started/installation#the-pages-directory-optional
// https://mui.com/material-ui/guides/nextjs/#typescript